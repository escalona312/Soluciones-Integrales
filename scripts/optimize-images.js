const fs = require('fs');
const path = require('path');

// Funci√≥n para optimizar im√°genes
function optimizeImages() {
  const imageDirs = ['images', 'galeria'];
  
  imageDirs.forEach(dir => {
    if (fs.existsSync(dir)) {
      console.log(`Optimizando im√°genes en ${dir}...`);
      
      const files = fs.readdirSync(dir);
      files.forEach(file => {
        const filePath = path.join(dir, file);
        const stats = fs.statSync(filePath);
        
        if (stats.isFile()) {
          const ext = path.extname(file).toLowerCase();
          if (['.jpg', '.jpeg', '.png', '.webp'].includes(ext)) {
            console.log(`  - ${file} (${(stats.size / 1024).toFixed(2)} KB)`);
          }
        }
      });
    }
  });
  
  console.log('\n‚úÖ Optimizaci√≥n de im√°genes completada');
  console.log('\nüí° Recomendaciones para optimizaci√≥n manual:');
  console.log('  1. Convertir im√°genes grandes a formato WebP');
  console.log('  2. Comprimir im√°genes JPEG con calidad 80-85%');
  console.log('  3. Redimensionar im√°genes a tama√±os apropiados');
  console.log('  4. Usar lazy loading para im√°genes fuera de pantalla');
}

// Ejecutar optimizaci√≥n
optimizeImages(); 